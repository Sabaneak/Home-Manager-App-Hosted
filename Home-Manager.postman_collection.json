{
	"info": {
		"_postman_id": "9d40e4ef-fe5d-4a36-8862-524c0ac28543",
		"name": "Home-Manager",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "register a new user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"akhil\",\n\t\"password\": \"aA+1bfH$\",\n\t\"email\": \"some-email@gmail.com\",\n    \"phone\": \"some phone number\",\n    \"profession\": \"doctor\"\n}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Phone Confirm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/otp_confirm/429403",
							"host": [
								"{{url}}"
							],
							"path": [
								"otp_confirm",
								"429403"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email Confirm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/email_confirm/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"email_confirm",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"access_token not empty\", function () {",
									"    pm.expect(jsonData.access_token).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"refresh token not empty\", function () {",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);",
									"});",
									"// set access token as environement variable",
									"if (jsonData.access_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"access_token\", null);",
									"}",
									"// set refresh token as environement variable",
									"if (jsonData.refresh_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\" : \"Sabaneak\",\n  \"password\" : \"aA+1bfH$\"\n}"
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"access_token\");\r",
									"pm.environment.unset(\"refresh_token\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"access_token not empty\", function () {",
									"    pm.expect(jsonData.access_token).not.eql(undefined);",
									"});",
									"// set access token as environement variable",
									"if (jsonData.access_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"access_token\", null);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/refresh",
							"host": [
								"{{url}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "change password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"access_token not empty\", function () {",
									"    pm.expect(jsonData.access_token).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"refresh token not empty\", function () {",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);",
									"});",
									"// set access token as environement variable",
									"if (jsonData.access_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"access_token\", null);",
									"}",
									"// set refresh token as environement variable",
									"if (jsonData.refresh_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{refresh_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\" : \"akhil\",\n  \"password\" : \"13\"\n}"
						},
						"url": {
							"raw": "{{url}}/change_password/akhil",
							"host": [
								"{{url}}"
							],
							"path": [
								"change_password",
								"akhil"
							]
						}
					},
					"response": []
				},
				{
					"name": "Github login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"access_token not empty\", function () {",
									"    pm.expect(jsonData.access_token).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"refresh token not empty\", function () {",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);",
									"});",
									"// set access token as environement variable",
									"if (jsonData.access_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"access_token\", null);",
									"}",
									"// set refresh token as environement variable",
									"if (jsonData.refresh_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/login/github",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								"github"
							]
						}
					},
					"response": []
				},
				{
					"name": "Google login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"access_token not empty\", function () {",
									"    pm.expect(jsonData.access_token).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"refresh token not empty\", function () {",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);",
									"});",
									"// set access token as environement variable",
									"if (jsonData.access_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"access_token\", null);",
									"}",
									"// set refresh token as environement variable",
									"if (jsonData.refresh_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/login/google",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								"google"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Username",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/check_username/akhil",
							"host": [
								"{{url}}"
							],
							"path": [
								"check_username",
								"akhil"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cards",
			"item": [
				{
					"name": "input card",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"category\": \"Meeting\",\n    \"data\": \n        { \"url\": \"meet.google.com\",\n        \"documents\": \"book\",\n        \"date_time\": \"2021-02-18T14:26:00+05:30\"\n        }\n}"
						},
						"url": {
							"raw": "{{url}}/cards",
							"host": [
								"{{url}}"
							],
							"path": [
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "get card by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/cards/5f9bac6bd739154821a99548",
							"host": [
								"{{url}}"
							],
							"path": [
								"cards",
								"5f9bac6bd739154821a99548"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit card by id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"category\": \"Refill\",\n    \"item\": \"Milk\",\n    \"count\": 20,\n    \"date_time\": \"2021-01-23 15:50:00\"\n}\n"
						},
						"url": {
							"raw": "{{url}}/cards/600bf5c5c24b681301091474",
							"host": [
								"{{url}}"
							],
							"path": [
								"cards",
								"600bf5c5c24b681301091474"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete card by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/cards/5fbf863d598a73b30efd028f",
							"host": [
								"{{url}}"
							],
							"path": [
								"cards",
								"5fbf863d598a73b30efd028f"
							]
						}
					},
					"response": []
				},
				{
					"name": "get category",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/category/Meeting",
							"host": [
								"{{url}}"
							],
							"path": [
								"category",
								"Meeting"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete category",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{refresh_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/category/Reminder",
							"host": [
								"{{url}}"
							],
							"path": [
								"category",
								"Reminder"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all cards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/cards/all",
							"host": [
								"{{url}}"
							],
							"path": [
								"cards",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Diary",
			"item": [
				{
					"name": "diary entry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"My bad day\",\n  \"text\": \"This is the data I will enter\"\n}"
						},
						"url": {
							"raw": "{{url}}/diary",
							"host": [
								"{{url}}"
							],
							"path": [
								"diary"
							]
						}
					},
					"response": []
				},
				{
					"name": "get diary by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/diary/5f9bac6bd739154821a99548",
							"host": [
								"{{url}}"
							],
							"path": [
								"diary",
								"5f9bac6bd739154821a99548"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit diary by id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \n  \"title\": \"Text\",\n  \"text\": \"Modified Data sike\"\n}"
						},
						"url": {
							"raw": "{{url}}/diary/5fb3e5a69534ad9e8648b8aa",
							"host": [
								"{{url}}"
							],
							"path": [
								"diary",
								"5fb3e5a69534ad9e8648b8aa"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all diary entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/diary/all",
							"host": [
								"{{url}}"
							],
							"path": [
								"diary",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Calendar",
			"item": [
				{
					"name": "Get Calendar",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/calendar/<string:access_token>",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendar",
								"<string:access_token>"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"start_time\": \"2021-02-09 16:00:00\",\r\n    \"duration\": 1,\r\n    \"summary\": \"IPL\",\r\n    \"description\": \"CSK ftw\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/calendar/event/<string:access_token>",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendar",
								"event",
								"<string:access_token>"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Event",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \n  \"eventId\": \"5ler1nnp9bsj9pa1m5tmdvgrb0\"\n}"
						},
						"url": {
							"raw": "{{url}}/calendar/delete/ya29.a0AfH6SMATei_e_Lvsw0WyRmmMXke730Kngsh-NxXWw7FpELX3bDA4cc77Ud6HNlH1OXBoZxnmRb4OLptXL5ptXI2gpRvP_4Okmh3oZN5wDCdC_PWwFopBLAsGM--FuffJNSh8ZoV2YbPv5J5nrXbX_340R_7kcFg9OWd_E66Rx5c",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendar",
								"delete",
								"ya29.a0AfH6SMATei_e_Lvsw0WyRmmMXke730Kngsh-NxXWw7FpELX3bDA4cc77Ud6HNlH1OXBoZxnmRb4OLptXL5ptXI2gpRvP_4Okmh3oZN5wDCdC_PWwFopBLAsGM--FuffJNSh8ZoV2YbPv5J5nrXbX_340R_7kcFg9OWd_E66Rx5c"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/calendar/all/<string:access_token>",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendar",
								"all",
								"<string:access_token>"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Stock",
			"item": [
				{
					"name": "stock entry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item\": \"Milk\",\n    \"count\": 5\n}"
						},
						"url": {
							"raw": "{{url}}/stock",
							"host": [
								"{{url}}"
							],
							"path": [
								"stock"
							]
						}
					},
					"response": []
				},
				{
					"name": "get stock by name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/stock/Milk",
							"host": [
								"{{url}}"
							],
							"path": [
								"stock",
								"Milk"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete item from stock",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/stock/ball",
							"host": [
								"{{url}}"
							],
							"path": [
								"stock",
								"ball"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all items in stock",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/stock/all",
							"host": [
								"{{url}}"
							],
							"path": [
								"stock",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "check refill",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/refill",
							"host": [
								"{{url}}"
							],
							"path": [
								"refill"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}